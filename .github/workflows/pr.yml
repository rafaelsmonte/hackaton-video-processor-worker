
name: Build and Deploy

on:
  pull_request:
    branches:
      - main

jobs:
  sonar:
    name: sonar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Instalar FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg
      - name: Instalar Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23 
      - name: Instalar dependências
        run: go mod tidy

      - name: Rodar testes e gerar cobertura
        run: go test $(go list ./... | grep -v /sqs/dto |   grep -v /internal/domain/adapters |   grep -v /internal/domain/entities  | grep -v /cmd) -coverprofile=coverage.out

      - name: Executar análise SonarQube
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.sources=.
            -Dsonar.go.coverage.reportPaths=coverage.out

      - name: Verificar Quality Gate no SonarQube
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build: 
    name: Build Image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Build image
      run: docker build -f docker/Dockerfile .
  
